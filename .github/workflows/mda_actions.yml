name: Test Environment

on:
  push:
    branches: [ main ]

env:
  USER_SERVER: ubuntu
  REPOSITORY_NAME: mda
  REPOSITORY_NAME_LC: mda
  PACKAGE_NAME: mda_testing
  IMAGE_NAME: mda_test

jobs:
  test:
    
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
      
      #- name: clone repository
      #  run: |
      #    cd /home/${{ env.USER_SERVER }}
      #    git clone https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/5GZORRO/${{ env.REPOSITORY_NAME }}.git
      
      #- name: decrypt env file
      #  run: |
      #    cd /home/${{ env.USER_SERVER }}/${{ env.REPOSITORY_NAME }}
      #    gpg --quiet --batch --yes --decrypt --passphrase="${{ secrets.ENV_PASSWORD }}" --output .env .env_test.gpg
      
      - name: Build image
        run: |
         cd /home/${{ env.USER_SERVER }}/${{ env.REPOSITORY_NAME_LC }}/MDA
         docker build -t docker.pkg.github.com/5gzorro/${{ env.REPOSITORY_NAME_LC }}/${{ env.PACKAGE_NAME }} .
      
      - name: Read VERSION file
        id: getversion
        run: echo "::set-output name=version::$(cat VERSION)"
      
      - uses: actions/delete-package-versions@v1
        continue-on-error: true
        with:
          package-name: ${{ env.PACKAGE_NAME }}
      
      - name: Publish image
        run: |
          docker login -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }} docker.pkg.github.com
          docker tag docker.pkg.github.com/5gzorro/${{ env.REPOSITORY_NAME_LC }}/${{ env.PACKAGE_NAME }}:latest docker.pkg.github.com/5gzorro/${{ env.REPOSITORY_NAME_LC }}/${{ env.PACKAGE_NAME }}:${{ steps.getversion.outputs.version }}
          docker push docker.pkg.github.com/5gzorro/${{ env.REPOSITORY_NAME_LC }}/${{ env.PACKAGE_NAME }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.getversion.outputs.version }}
          release_name: ${{ steps.getversion.outputs.version }}
          body: |
            ${{ github.event.head_commit.message }}
      
      - name: stop container
        continue-on-error: true
        run: docker stop ${{ env.IMAGE_NAME }}
        
      - name: remove images
        continue-on-error: true
        run: docker rmi $(docker images -q docker.pkg.github.com/5gzorro/${{ env.REPOSITORY_NAME_LC }}/${{ env.GATEWAY_NAME }}) --force
      
      #- name: pull package
      #  run: docker pull docker.pkg.github.com/5gzorro/${{ env.REPOSITORY_NAME_LC }}/${{ env.PACKAGE_NAME }}:latest

      #- name: running container
      #  run: docker run -d --rm --name ${{ env.IMAGE_NAME }} -e "${{ secrets.OPERATOR_PUBLIC_KEY }}" -p 5000:5000 docker.pkg.github.com/5gzorro/${{ env.REPOSITORY_NAME_LC }}/${{ env.PACKAGE_NAME }}:latest
        
