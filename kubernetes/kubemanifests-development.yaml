apiVersion: v1
items:

  # services
  # mda
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        io.kompose.service: mda
      name: mda
    spec:
      type: NodePort
      ports:
        - name: "4000"
          port: 4000
          targetPort: 4000
          nodePort: 30038
      selector:
        io.kompose.service: mda
    status:
      loadBalancer: {}
      
  # postgres
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        io.kompose.service: postgres-mda
      name: postgres-mda
    spec:
      type: NodePort
      ports:
        - name: "5432"
          port: 5432
          targetPort: 5432
          nodePort: 30037
      selector:
        io.kompose.service: postgres-mda
    status:
      loadBalancer: {}
      
  # dummy-osm
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        io.kompose.service: dummy-osm-mda
      name: dummy-osm-mda
    spec:
      type: NodePort
      ports:
        - name: "4500"
          port: 4500
          targetPort: 4500
          nodePort: 30036
      selector:
        io.kompose.service: dummy-osm-mda
    status:
      loadBalancer: {}
      
  # deployments
  # mda
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        io.kompose.service: mda
      name: mda
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: mda
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            io.kompose.service: mda
        spec:
          containers:
            - name: mda
              image: docker.pkg.github.com/5gzorro/mda/mda_production:latest
              imagePullPolicy: "Always"
              envFrom:
              - secretRef:
                  name: env-file-mda
              ports:
                - containerPort: 4000
              resources: {}
              volumeMounts:
                - mountPath: /logs
                  name: mda-claim0
          imagePullSecrets:
            - name: regcred-mda
          restartPolicy: Always
          volumes:
            - name: mda-claim0
              persistentVolumeClaim:
                claimName: mda-claim0
    status: {}
    
  # postgres
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        io.kompose.service: postgres-mda
      name: postgres-mda
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: postgres-mda
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            io.kompose.service: postgres-mda
        spec:
          containers:
            - name: mda-bd
              envFrom:
              - secretRef:
                  name: env-file-mda
              image: postgres
              ports:
                - containerPort: 5432
              resources: {}
              volumeMounts:
                - mountPath: /var/lib/postgresql/data
                  name: mda-postgres-claim0
          restartPolicy: Always
          volumes:
            - name: mda-postgres-claim0
              persistentVolumeClaim:
                claimName: mda-postgres-claim0
    status: {}
    
  # dummy-osm
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        io.kompose.service: dummy-osm-mda
      name: dummy-osm-mda
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: dummy-osm-mda
      strategy: {}
      template:
        metadata:
          labels:
            io.kompose.service: dummy-osm-mda
        spec:
          containers:
            - name: dummy-osm-mda
              image: docker.pkg.github.com/5gzorro/mda/osm_dummy:latest
              ports:
                - containerPort: 4500
              resources: {}
          imagePullSecrets:
            - name: regcred-mda
          restartPolicy: Always
    status: {}

  # persistent volume
  # postgres
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      labels:
        io.kompose.service: mda-postgres-claim0
      name: mda-postgres-claim0
    spec:
      storageClassName: postgresvolume
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}

  # mda
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      labels:
        io.kompose.service: mda-claim0
      name: mda-claim0
    spec:
      storageClassName: mdavolume
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}

  # persistent volume
  # postgres
  - apiVersion: v1
    kind: PersistentVolume
    metadata:
      name: mda-postgres-pv-volume
      labels:
        type: local
    spec:
      storageClassName: postgresvolume
      capacity:
        storage: 100Mi
      accessModes:
        - ReadWriteOnce
      hostPath:
        path: "/mnt/mda/development/postgres"

  # mda
  - apiVersion: v1
    kind: PersistentVolume
    metadata:
      name: mda-pv-volume
      labels:
        type: local
    spec:
      storageClassName: mdavolume
      capacity:
        storage: 100Mi
      accessModes:
        - ReadWriteOnce
      hostPath:
        path: "/mnt/mda/development/logs"
kind: List
metadata: {}
